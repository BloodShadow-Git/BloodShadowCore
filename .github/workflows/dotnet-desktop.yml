name: Build and Release C# DLL

on:
  push:
    branches:
      - master # Триггер при пуше в ветку master

jobs:
  build:
    name: Build DLL
    runs-on: ubuntu-latest # Используем Ubuntu для сборки

    steps:
      - uses: actions/checkout@v3 # Выгружаем репозиторий

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' # или нужную версию .NET SDK
          include-prerelease: false

      - name: Restore dependencies
        run: dotnet restore # Восстанавливаем NuGet пакеты

      - name: Build
        run: dotnet build --configuration Release # Собираем проект в режиме Release

      - name: Package
        run: dotnet publish --configuration Release --output ./publish # Публикуем проект в папку publish

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Токен для создания релиза (автоматически предоставляется Github Actions)
        with:
          tag_name: v${{ github.run_number }} # Имя тега релиза (v + номер запуска Workflow)
          release_name: Release v${{ github.run_number }} # Имя релиза
          body: |
            Automated release of the DLL.
            Check the commits for details.
          draft: false # False - сразу публикуется, True - как черновик
          prerelease: false # False - полноценный релиз, True - пре-релиз

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # URL для загрузки ассетов
          asset_path: ./publish/BloodShadowFramework.dll # Путь к вашей собранной DLL.  Замените <YOUR_PROJECT_NAME> на название вашего проекта.
          asset_name: <YOUR_PROJECT_NAME>.dll # Имя файла DLL, которое будет отображаться в релизе. Замените <YOUR_PROJECT_NAME> на название вашего проекта.
          asset_content_type: application/octet-stream # Тип контента
